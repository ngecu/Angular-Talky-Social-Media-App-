{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let SuggestionsComponent = class SuggestionsComponent {\n  constructor(modalService) {\n    this.modalService = modalService;\n    this.users = [{\n      username: 'instagram',\n      isFollowing: false,\n      profileImage: 'assets/images/profiles/profile-3.jpg'\n    }, {\n      username: 'dccomics',\n      isFollowing: false,\n      profileImage: 'assets/images/profiles/profile-4.png'\n    }, {\n      username: 'thecw',\n      isFollowing: false,\n      profileImage: 'assets/images/profiles/profile-5.jpg'\n    }];\n    this.modalRef = null;\n    this.userToUnfollow = null;\n  }\n  toggleFollow(user) {\n    if (user.isFollowing) {\n      // Show confirmation modal for Unfollow\n      this.userToUnfollow = user;\n      this.modalRef = this.modalService.open(ConfirmationModalComponent);\n      this.modalRef.result.then(result => {\n        if (result === 'confirm') {\n          this.unfollowUser();\n        }\n      }, () => {\n        // Modal dismissed\n      });\n    } else {\n      // Toggle the Follow state for other cases\n      user.isFollowing = !user.isFollowing;\n    }\n  }\n  unfollowUser() {\n    if (this.userToUnfollow) {\n      this.userToUnfollow.isFollowing = false;\n    }\n    this.closeModal();\n  }\n  closeModal() {\n    if (this.modalRef) {\n      this.modalRef.close();\n      this.modalRef = null;\n    }\n  }\n};\nSuggestionsComponent = __decorate([Component({\n  selector: 'app-suggestions',\n  templateUrl: './suggestions.component.html',\n  styleUrls: ['./suggestions.component.scss']\n})], SuggestionsComponent);","map":{"version":3,"names":["Component","SuggestionsComponent","constructor","modalService","users","username","isFollowing","profileImage","modalRef","userToUnfollow","toggleFollow","user","open","ConfirmationModalComponent","result","then","unfollowUser","closeModal","close","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/devngecu/Desktop/The_Jitu_Training/talky/frontend/src/app/suggestions/suggestions.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { User } from '../interfaces/user';\n\n@Component({\n  selector: 'app-suggestions',\n  templateUrl: './suggestions.component.html',\n  styleUrls: ['./suggestions.component.scss']\n})\nexport class SuggestionsComponent {\n\n  users: User[] = [\n    { username: 'instagram', isFollowing: false, profileImage: 'assets/images/profiles/profile-3.jpg' },\n    { username: 'dccomics', isFollowing: false, profileImage: 'assets/images/profiles/profile-4.png' },\n    { username: 'thecw', isFollowing: false, profileImage: 'assets/images/profiles/profile-5.jpg' }\n  ];\n\n  private modalRef: NgbModalRef | null = null;\n  userToUnfollow: User | null = null;\n\n  constructor(private modalService: NgbModal) {}\n\n  toggleFollow(user: User): void {\n    if (user.isFollowing) {\n      // Show confirmation modal for Unfollow\n      this.userToUnfollow = user;\n      this.modalRef = this.modalService.open(ConfirmationModalComponent);\n      this.modalRef.result.then(\n        (result) => {\n          if (result === 'confirm') {\n            this.unfollowUser();\n          }\n        },\n        () => {\n          // Modal dismissed\n        }\n      );\n    } else {\n      // Toggle the Follow state for other cases\n      user.isFollowing = !user.isFollowing;\n    }\n  }\n\n  unfollowUser(): void {\n    if (this.userToUnfollow) {\n      this.userToUnfollow.isFollowing = false;\n    }\n    this.closeModal();\n  }\n\n  closeModal(): void {\n    if (this.modalRef) {\n      this.modalRef.close();\n      this.modalRef = null;\n    }\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAQlC,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAW/BC,YAAoBC,YAAsB;IAAtB,KAAAA,YAAY,GAAZA,YAAY;IAThC,KAAAC,KAAK,GAAW,CACd;MAAEC,QAAQ,EAAE,WAAW;MAAEC,WAAW,EAAE,KAAK;MAAEC,YAAY,EAAE;IAAsC,CAAE,EACnG;MAAEF,QAAQ,EAAE,UAAU;MAAEC,WAAW,EAAE,KAAK;MAAEC,YAAY,EAAE;IAAsC,CAAE,EAClG;MAAEF,QAAQ,EAAE,OAAO;MAAEC,WAAW,EAAE,KAAK;MAAEC,YAAY,EAAE;IAAsC,CAAE,CAChG;IAEO,KAAAC,QAAQ,GAAuB,IAAI;IAC3C,KAAAC,cAAc,GAAgB,IAAI;EAEW;EAE7CC,YAAYA,CAACC,IAAU;IACrB,IAAIA,IAAI,CAACL,WAAW,EAAE;MACpB;MACA,IAAI,CAACG,cAAc,GAAGE,IAAI;MAC1B,IAAI,CAACH,QAAQ,GAAG,IAAI,CAACL,YAAY,CAACS,IAAI,CAACC,0BAA0B,CAAC;MAClE,IAAI,CAACL,QAAQ,CAACM,MAAM,CAACC,IAAI,CACtBD,MAAM,IAAI;QACT,IAAIA,MAAM,KAAK,SAAS,EAAE;UACxB,IAAI,CAACE,YAAY,EAAE;;MAEvB,CAAC,EACD,MAAK;QACH;MAAA,CACD,CACF;KACF,MAAM;MACL;MACAL,IAAI,CAACL,WAAW,GAAG,CAACK,IAAI,CAACL,WAAW;;EAExC;EAEAU,YAAYA,CAAA;IACV,IAAI,IAAI,CAACP,cAAc,EAAE;MACvB,IAAI,CAACA,cAAc,CAACH,WAAW,GAAG,KAAK;;IAEzC,IAAI,CAACW,UAAU,EAAE;EACnB;EAEAA,UAAUA,CAAA;IACR,IAAI,IAAI,CAACT,QAAQ,EAAE;MACjB,IAAI,CAACA,QAAQ,CAACU,KAAK,EAAE;MACrB,IAAI,CAACV,QAAQ,GAAG,IAAI;;EAExB;CAED;AAhDYP,oBAAoB,GAAAkB,UAAA,EALhCnB,SAAS,CAAC;EACToB,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWrB,oBAAoB,CAgDhC"},"metadata":{},"sourceType":"module","externalDependencies":[]}