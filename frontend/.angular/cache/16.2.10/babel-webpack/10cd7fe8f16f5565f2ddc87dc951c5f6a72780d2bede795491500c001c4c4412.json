{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { Subject, of } from 'rxjs';\nexport let SidebarComponent = class SidebarComponent {\n  constructor(router) {\n    this.router = router;\n    this.searchQuery = '';\n    this.searchResults = [];\n    this.searchSubject = new Subject();\n    this.searchSubject.pipe(debounceTime(300),\n    // Debounce for 300 milliseconds\n    distinctUntilChanged(),\n    // Only emit if the value has changed\n    switchMap(query => this.searchUsers(query)) // Use switchMap for handling asynchronous operations\n    ).subscribe(results => {\n      this.searchResults = results;\n    });\n  }\n  isActive(route) {\n    return this.router.isActive(route, true);\n  }\n  ngOnInit() {}\n  searchUsers(query) {\n    // Implement your user search logic here\n    // You can make API calls or perform any asynchronous operation\n    // Return an observable with the search results\n    const results = [\"search\"];\n    return of(results);\n  }\n};\nSidebarComponent = __decorate([Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})], SidebarComponent);","map":{"version":3,"names":["Component","debounceTime","distinctUntilChanged","switchMap","Subject","of","SidebarComponent","constructor","router","searchQuery","searchResults","searchSubject","pipe","query","searchUsers","subscribe","results","isActive","route","ngOnInit","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/devngecu/Desktop/The_Jitu_Training/talky/frontend/src/app/sidebar/sidebar.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { Observable, Subject, of } from 'rxjs';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent {\n  searchQuery: string = '';\n  searchResults: string[] = [];\n\n  private searchSubject = new Subject<string>();\n\n  constructor(private router: Router) {\n    this.searchSubject.pipe(\n      debounceTime(300), // Debounce for 300 milliseconds\n      distinctUntilChanged(), // Only emit if the value has changed\n      switchMap((query) => this.searchUsers(query)) // Use switchMap for handling asynchronous operations\n    ).subscribe((results:string[]) => {\n      this.searchResults = results;\n    });\n\n  }\n\n  isActive(route: string): boolean {\n    return this.router.isActive(route, true);\n  }\n\n\n\n \n  ngOnInit(): void {\n  }\n\n   searchUsers(query: string): Observable<string[]> {\n    // Implement your user search logic here\n    // You can make API calls or perform any asynchronous operation\n    // Return an observable with the search results\n    const results: string[] = [\"search\"];\n    return of(results);\n  }\n\n\n  \n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAASC,YAAY,EAAEC,oBAAoB,EAAEC,SAAS,QAAQ,gBAAgB;AAC9E,SAAqBC,OAAO,EAAEC,EAAE,QAAQ,MAAM;AAOvC,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAM3BC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAL1B,KAAAC,WAAW,GAAW,EAAE;IACxB,KAAAC,aAAa,GAAa,EAAE;IAEpB,KAAAC,aAAa,GAAG,IAAIP,OAAO,EAAU;IAG3C,IAAI,CAACO,aAAa,CAACC,IAAI,CACrBX,YAAY,CAAC,GAAG,CAAC;IAAE;IACnBC,oBAAoB,EAAE;IAAE;IACxBC,SAAS,CAAEU,KAAK,IAAK,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC,CAAC,CAAC;KAC/C,CAACE,SAAS,CAAEC,OAAgB,IAAI;MAC/B,IAAI,CAACN,aAAa,GAAGM,OAAO;IAC9B,CAAC,CAAC;EAEJ;EAEAC,QAAQA,CAACC,KAAa;IACpB,OAAO,IAAI,CAACV,MAAM,CAACS,QAAQ,CAACC,KAAK,EAAE,IAAI,CAAC;EAC1C;EAKAC,QAAQA,CAAA,GACR;EAECL,WAAWA,CAACD,KAAa;IACxB;IACA;IACA;IACA,MAAMG,OAAO,GAAa,CAAC,QAAQ,CAAC;IACpC,OAAOX,EAAE,CAACW,OAAO,CAAC;EACpB;CAID;AArCYV,gBAAgB,GAAAc,UAAA,EAL5BpB,SAAS,CAAC;EACTqB,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWjB,gBAAgB,CAqC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}