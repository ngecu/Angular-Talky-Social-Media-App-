{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../chart.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../sidebar/sidebar.component\";\nfunction MessagespageComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 2);\n    i0.ɵɵelement(2, \"div\", 3)(3, \"div\", 4)(4, \"div\", 5)(5, \"div\", 6)(6, \"div\", 7)(7, \"div\", 8)(8, \"div\", 9)(9, \"div\", 10)(10, \"div\", 11);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction MessagespageComponent_div_1_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵlistener(\"click\", function MessagespageComponent_div_1_div_8_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const user_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.selectUserHandler(user_r4.phone));\n    });\n    i0.ɵɵelementStart(1, \"div\", 26)(2, \"div\", 27);\n    i0.ɵɵelement(3, \"img\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 29);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 30);\n    i0.ɵɵtext(7, \" \\u00B7 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"span\", 30);\n    i0.ɵɵtext(9, \"3 days\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const user_r4 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(user_r4.name);\n  }\n}\nfunction MessagespageComponent_div_1_ng_container_15_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 42);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r8 == null ? null : item_r8.message);\n  }\n}\nfunction MessagespageComponent_div_1_ng_container_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 31);\n    i0.ɵɵelement(2, \"img\", 32);\n    i0.ɵɵelementStart(3, \"p\", 33);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 34);\n    i0.ɵɵtemplate(6, MessagespageComponent_div_1_ng_container_15_div_6_Template, 3, 1, \"div\", 35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 36)(8, \"div\", 14)(9, \"div\", 37)(10, \"div\", 38)(11, \"input\", 39);\n    i0.ɵɵlistener(\"ngModelChange\", function MessagespageComponent_div_1_ng_container_15_Template_input_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.messageText = $event);\n    })(\"keyup\", function MessagespageComponent_div_1_ng_container_15_Template_input_keyup_11_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView($event.keyCode === 13 && ctx_r11.sendMessage());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"div\", 40)(13, \"button\", 41);\n    i0.ɵɵlistener(\"click\", function MessagespageComponent_div_1_ng_container_15_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.sendMessage());\n    });\n    i0.ɵɵtext(14, \"Send \");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r3.selectedUser == null ? null : ctx_r3.selectedUser.image, i0.ɵɵsanitizeUrl)(\"alt\", ctx_r3.selectedUser == null ? null : ctx_r3.selectedUser.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r3.selectedUser == null ? null : ctx_r3.selectedUser.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.messageArray);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.messageText);\n  }\n}\nfunction MessagespageComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"div\", 13)(2, \"div\", 14);\n    i0.ɵɵelement(3, \"app-sidebar\", 15);\n    i0.ɵɵelementStart(4, \"main\", 16)(5, \"div\", 14)(6, \"div\", 17)(7, \"div\", 18);\n    i0.ɵɵtemplate(8, MessagespageComponent_div_1_div_8_Template, 10, 1, \"div\", 19);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 20)(10, \"div\", 21)(11, \"div\", 22);\n    i0.ɵɵtext(12, \"Chat\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 23)(14, \"div\", 24);\n    i0.ɵɵtemplate(15, MessagespageComponent_div_1_ng_container_15_Template, 15, 5, \"ng-container\", 0);\n    i0.ɵɵelementEnd()()()()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.userList);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.selectedUser);\n  }\n}\nexport class MessagespageComponent {\n  constructor(chatService, cdr) {\n    this.chatService = chatService;\n    this.cdr = cdr;\n    this.showSpinners = true;\n    this.messageArray = [];\n    this.storageArray = [];\n    this.showScreen = false;\n    this.rooms = [\"room1\"];\n    this.userList = [{\n      id: 1,\n      name: 'The Swag Coder',\n      phone: '9876598765',\n      image: 'assets/user/user-1.png',\n      rooms: this.rooms\n    }, {\n      id: 2,\n      name: 'Wade Warren',\n      phone: '9876543210',\n      image: 'assets/user/user-2.png',\n      rooms: this.rooms\n    }, {\n      id: 3,\n      name: 'Albert Flores',\n      phone: '9988776655',\n      image: 'assets/user/user-3.png',\n      rooms: this.rooms\n    }, {\n      id: 4,\n      name: 'Dianne Russell',\n      phone: '9876556789',\n      image: 'assets/user/user-4.png',\n      rooms: this.rooms\n    }];\n  }\n  ngOnInit() {\n    // Set a timeout to hide the spinners after 5 seconds\n    setTimeout(() => {\n      this.showSpinners = false;\n    }, 3000);\n    this.chatService.getMessage().subscribe(data => {\n      this.messageArray.push(data);\n      console.log('Message received:', data);\n      setTimeout(() => {\n        this.storageArray = this.chatService.getStorage();\n        const storeIndex = this.storageArray.findIndex(storage => storage.roomId === this.roomId);\n        this.messageArray = this.storageArray[storeIndex].chats;\n      }, 500);\n    });\n  }\n  selectUserHandler(phone) {\n    this.selectedUser = this.userList.find(user => user.phone === phone);\n    if (this.currentUser) {\n      this.roomId = this.selectedUser.roomId[this.currentUser.id];\n    }\n    this.messageArray = [];\n    this.storageArray = this.chatService.getStorage();\n    const storeIndex = this.storageArray.findIndex(storage => storage.roomId === this.roomId);\n    if (storeIndex > -1) {\n      this.messageArray = this.storageArray[storeIndex].chats;\n    }\n  }\n  sendMessage() {\n    this.chatService.sendMessage({\n      user: \"Robinson\",\n      room: \"this.roomId\",\n      message: this.messageText\n    });\n    this.storageArray = this.chatService.getStorage();\n    const storeIndex = this.storageArray.findIndex(storage => storage.roomId === this.roomId);\n    console.log(storeIndex);\n    if (storeIndex > -1) {\n      this.storageArray[storeIndex].chats.push({\n        user: this.currentUser?.name,\n        message: this.messageText\n      });\n    } else {\n      const updateStorage = {\n        roomId: this.roomId,\n        chats: [{\n          user: this.currentUser?.name,\n          message: this.messageText\n        }]\n      };\n      this.storageArray.push(updateStorage);\n    }\n    this.chatService.setStorage(this.storageArray);\n    this.messageText = '';\n    this.cdr.detectChanges();\n  }\n  static #_ = this.ɵfac = function MessagespageComponent_Factory(t) {\n    return new (t || MessagespageComponent)(i0.ɵɵdirectiveInject(i1.ChartService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MessagespageComponent,\n    selectors: [[\"app-messagespage\"]],\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [\"class\", \"p-4\", 4, \"ngIf\"], [1, \"container\", \"d-flex\", \"justify-content-center\"], [1, \"spinner-grow\", \"text-muted\"], [1, \"spinner-grow\", \"text-primary\"], [1, \"spinner-grow\", \"text-success\"], [1, \"spinner-grow\", \"text-info\"], [1, \"spinner-grow\", \"text-warning\"], [1, \"spinner-grow\", \"text-danger\"], [1, \"spinner-grow\", \"text-secondary\"], [1, \"spinner-grow\", \"text-dark\"], [1, \"spinner-grow\", \"text-light\"], [1, \"p-4\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-2\", \"d-md-block\", \"bg-light\", \"sidebar\"], [1, \"col-10\"], [1, \"col-xl-3\", \"col-lg-3\", \"col-md-3\", \"col-sm-3\", \"col-3\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-xl-9\", \"col-lg-9\", \"col-md-9\", \"col-sm-9\", \"col-9\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\", \"height3\"], [1, \"chat-container\"], [1, \"list-group-item\", 3, \"click\"], [1, \"d-flex\", \"flex-row\", \"align-items-center\"], [1, \"rounded-circle\", \"overflow-hidden\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"border\", \"border-danger\", \"post-profile-photo\", \"mr-3\"], [\"src\", \"assets/images/profiles/profile-1.jpg\", \"alt\", \"...\", 2, \"transform\", \"scale(1.5)\", \"width\", \"100%\", \"position\", \"absolute\", \"left\", \"0\"], [1, \"font-weight-bold\", \"px-2\"], [1, \"text-muted\"], [1, \"chat-header\"], [1, \"avatar\", 3, \"src\", \"alt\"], [1, \"username\"], [1, \"chat-body\"], [4, \"ngFor\", \"ngForOf\"], [1, \"chat-footer\"], [1, \"col-md-10\"], [1, \"form-group\", \"mb-0\"], [\"type\", \"text\", \"placeholder\", \"Type a message\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"keyup\"], [1, \"col-md-2\", \"text-center\", \"align-self-center\"], [1, \"btn\", \"btn-primary\", \"btn-sm\", \"px-3\", 3, \"click\"], [1, \"message-container\"]],\n    template: function MessagespageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, MessagespageComponent_div_0_Template, 11, 0, \"div\", 0);\n        i0.ɵɵtemplate(1, MessagespageComponent_div_1_Template, 16, 2, \"div\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.showSpinners);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.showSpinners);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.SidebarComponent],\n    styles: [\".chat-list[_ngcontent-%COMP%] {\\n  padding: 0;\\n  font-size: 0.8rem;\\n}\\n\\n.chat-list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n  margin-bottom: 10px;\\n  overflow: auto;\\n  color: #ffffff;\\n}\\n\\n.chat-list[_ngcontent-%COMP%]   .chat-img[_ngcontent-%COMP%] {\\n  float: left;\\n  width: 48px;\\n}\\n\\n.chat-list[_ngcontent-%COMP%]   .chat-img[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  border-radius: 50px;\\n  width: 100%;\\n}\\n\\n.chat-list[_ngcontent-%COMP%]   .chat-message[_ngcontent-%COMP%] {\\n  border-radius: 50px;\\n  background: #5a99ee;\\n  display: inline-block;\\n  padding: 10px 20px;\\n  position: relative;\\n}\\n\\n.chat-list[_ngcontent-%COMP%]   .chat-message[_ngcontent-%COMP%]:before {\\n  content: \\\"\\\";\\n  position: absolute;\\n  top: 15px;\\n  width: 0;\\n  height: 0;\\n}\\n\\n.chat-list[_ngcontent-%COMP%]   .chat-message[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%] {\\n  margin: 0 0 5px 0;\\n  font-weight: 600;\\n  line-height: 100%;\\n  font-size: 0.9rem;\\n}\\n\\n.chat-list[_ngcontent-%COMP%]   .chat-message[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  line-height: 18px;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.chat-list[_ngcontent-%COMP%]   .chat-body[_ngcontent-%COMP%] {\\n  margin-left: 20px;\\n  float: left;\\n  width: 70%;\\n}\\n\\n.chat-list[_ngcontent-%COMP%]   .in[_ngcontent-%COMP%]   .chat-message[_ngcontent-%COMP%]:before {\\n  left: -12px;\\n  border-bottom: 20px solid transparent;\\n  border-right: 20px solid #5a99ee;\\n}\\n\\n.chat-list[_ngcontent-%COMP%]   .out[_ngcontent-%COMP%]   .chat-img[_ngcontent-%COMP%] {\\n  float: right;\\n}\\n\\n.chat-list[_ngcontent-%COMP%]   .out[_ngcontent-%COMP%]   .chat-body[_ngcontent-%COMP%] {\\n  float: right;\\n  margin-right: 20px;\\n  text-align: right;\\n}\\n\\n.chat-list[_ngcontent-%COMP%]   .out[_ngcontent-%COMP%]   .chat-message[_ngcontent-%COMP%] {\\n  background: #fc6d4c;\\n}\\n\\n.chat-list[_ngcontent-%COMP%]   .out[_ngcontent-%COMP%]   .chat-message[_ngcontent-%COMP%]:before {\\n  right: -12px;\\n  border-bottom: 20px solid transparent;\\n  border-left: 20px solid #fc6d4c;\\n}\\n\\n.card[_ngcontent-%COMP%]   .card-header[_ngcontent-%COMP%]:first-child {\\n  border-radius: 0.3rem 0.3rem 0 0;\\n}\\n\\n.card[_ngcontent-%COMP%]   .card-header[_ngcontent-%COMP%] {\\n  background: #17202b;\\n  border: 0;\\n  font-size: 1rem;\\n  padding: 0.65rem 1rem;\\n  position: relative;\\n  font-weight: 600;\\n  color: #ffffff;\\n}\\n\\n.content[_ngcontent-%COMP%] {\\n  margin-top: 40px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWVzc2FnZXNwYWdlL21lc3NhZ2VzcGFnZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQUE7RUFDQSxpQkFBQTtBQUNKOztBQUVBO0VBQ0ksbUJBQUE7RUFDQSxjQUFBO0VBQ0EsY0FBQTtBQUNKOztBQUVBO0VBQ0ksV0FBQTtFQUNBLFdBQUE7QUFDSjs7QUFFQTtFQUdJLG1CQUFBO0VBQ0EsV0FBQTtBQUNKOztBQUVBO0VBR0ksbUJBQUE7RUFDQSxtQkFBQTtFQUNBLHFCQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtBQUNKOztBQUVBO0VBQ0ksV0FBQTtFQUNBLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLFFBQUE7RUFDQSxTQUFBO0FBQ0o7O0FBRUE7RUFDSSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxpQkFBQTtBQUNKOztBQUVBO0VBQ0ksaUJBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtBQUNKOztBQUVBO0VBQ0ksaUJBQUE7RUFDQSxXQUFBO0VBQ0EsVUFBQTtBQUNKOztBQUVBO0VBQ0ksV0FBQTtFQUNBLHFDQUFBO0VBQ0EsZ0NBQUE7QUFDSjs7QUFFQTtFQUNJLFlBQUE7QUFDSjs7QUFFQTtFQUNJLFlBQUE7RUFDQSxrQkFBQTtFQUNBLGlCQUFBO0FBQ0o7O0FBRUE7RUFDSSxtQkFBQTtBQUNKOztBQUVBO0VBQ0ksWUFBQTtFQUNBLHFDQUFBO0VBQ0EsK0JBQUE7QUFDSjs7QUFFQTtFQUdJLGdDQUFBO0FBQ0o7O0FBQ0E7RUFDSSxtQkFBQTtFQUNBLFNBQUE7RUFDQSxlQUFBO0VBQ0EscUJBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EsY0FBQTtBQUVKOztBQUNBO0VBQ0ksZ0JBQUE7QUFFSiIsInNvdXJjZXNDb250ZW50IjpbIi5jaGF0LWxpc3Qge1xuICAgIHBhZGRpbmc6IDA7XG4gICAgZm9udC1zaXplOiAuOHJlbTtcbn1cblxuLmNoYXQtbGlzdCBsaSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgICBjb2xvcjogI2ZmZmZmZjtcbn1cblxuLmNoYXQtbGlzdCAuY2hhdC1pbWcge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHdpZHRoOiA0OHB4O1xufVxuXG4uY2hhdC1saXN0IC5jaGF0LWltZyBpbWcge1xuICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogNTBweDtcbiAgICAtbW96LWJvcmRlci1yYWRpdXM6IDUwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogNTBweDtcbiAgICB3aWR0aDogMTAwJTtcbn1cblxuLmNoYXQtbGlzdCAuY2hhdC1tZXNzYWdlIHtcbiAgICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDUwcHg7XG4gICAgLW1vei1ib3JkZXItcmFkaXVzOiA1MHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDUwcHg7XG4gICAgYmFja2dyb3VuZDogIzVhOTllZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmNoYXQtbGlzdCAuY2hhdC1tZXNzYWdlOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxNXB4O1xuICAgIHdpZHRoOiAwO1xuICAgIGhlaWdodDogMDtcbn1cblxuLmNoYXQtbGlzdCAuY2hhdC1tZXNzYWdlIGg1IHtcbiAgICBtYXJnaW46IDAgMCA1cHggMDtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxMDAlO1xuICAgIGZvbnQtc2l6ZTogLjlyZW07XG59XG5cbi5jaGF0LWxpc3QgLmNoYXQtbWVzc2FnZSBwIHtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbn1cblxuLmNoYXQtbGlzdCAuY2hhdC1ib2R5IHtcbiAgICBtYXJnaW4tbGVmdDogMjBweDtcbiAgICBmbG9hdDogbGVmdDtcbiAgICB3aWR0aDogNzAlO1xufVxuXG4uY2hhdC1saXN0IC5pbiAuY2hhdC1tZXNzYWdlOmJlZm9yZSB7XG4gICAgbGVmdDogLTEycHg7XG4gICAgYm9yZGVyLWJvdHRvbTogMjBweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItcmlnaHQ6IDIwcHggc29saWQgIzVhOTllZTtcbn1cblxuLmNoYXQtbGlzdCAub3V0IC5jaGF0LWltZyB7XG4gICAgZmxvYXQ6IHJpZ2h0O1xufVxuXG4uY2hhdC1saXN0IC5vdXQgLmNoYXQtYm9keSB7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIG1hcmdpbi1yaWdodDogMjBweDtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLmNoYXQtbGlzdCAub3V0IC5jaGF0LW1lc3NhZ2Uge1xuICAgIGJhY2tncm91bmQ6ICNmYzZkNGM7XG59XG5cbi5jaGF0LWxpc3QgLm91dCAuY2hhdC1tZXNzYWdlOmJlZm9yZSB7XG4gICAgcmlnaHQ6IC0xMnB4O1xuICAgIGJvcmRlci1ib3R0b206IDIwcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLWxlZnQ6IDIwcHggc29saWQgI2ZjNmQ0Yztcbn1cblxuLmNhcmQgLmNhcmQtaGVhZGVyOmZpcnN0LWNoaWxkIHtcbiAgICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDAuM3JlbSAwLjNyZW0gMCAwO1xuICAgIC1tb3otYm9yZGVyLXJhZGl1czogMC4zcmVtIDAuM3JlbSAwIDA7XG4gICAgYm9yZGVyLXJhZGl1czogMC4zcmVtIDAuM3JlbSAwIDA7XG59XG4uY2FyZCAuY2FyZC1oZWFkZXIge1xuICAgIGJhY2tncm91bmQ6ICMxNzIwMmI7XG4gICAgYm9yZGVyOiAwO1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICBwYWRkaW5nOiAuNjVyZW0gMXJlbTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICBjb2xvcjogI2ZmZmZmZjtcbn1cblxuLmNvbnRlbnR7XG4gICAgbWFyZ2luLXRvcDo0MHB4OyAgICBcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵlistener","MessagespageComponent_div_1_div_8_Template_div_click_0_listener","restoredCtx","ɵɵrestoreView","_r6","user_r4","$implicit","ctx_r5","ɵɵnextContext","ɵɵresetView","selectUserHandler","phone","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate","name","item_r8","message","ɵɵelementContainerStart","ɵɵtemplate","MessagespageComponent_div_1_ng_container_15_div_6_Template","MessagespageComponent_div_1_ng_container_15_Template_input_ngModelChange_11_listener","$event","_r10","ctx_r9","messageText","MessagespageComponent_div_1_ng_container_15_Template_input_keyup_11_listener","ctx_r11","keyCode","sendMessage","MessagespageComponent_div_1_ng_container_15_Template_button_click_13_listener","ctx_r12","ɵɵelementContainerEnd","ɵɵproperty","ctx_r3","selectedUser","image","ɵɵsanitizeUrl","messageArray","MessagespageComponent_div_1_div_8_Template","MessagespageComponent_div_1_ng_container_15_Template","ctx_r1","userList","MessagespageComponent","constructor","chatService","cdr","showSpinners","storageArray","showScreen","rooms","id","ngOnInit","setTimeout","getMessage","subscribe","data","push","console","log","getStorage","storeIndex","findIndex","storage","roomId","chats","find","user","currentUser","room","updateStorage","setStorage","detectChanges","_","ɵɵdirectiveInject","i1","ChartService","ChangeDetectorRef","_2","selectors","decls","vars","consts","template","MessagespageComponent_Template","rf","ctx","MessagespageComponent_div_0_Template","MessagespageComponent_div_1_Template"],"sources":["/home/devngecu/Desktop/The_Jitu_Training/talky/frontend/src/app/messagespage/messagespage.component.ts","/home/devngecu/Desktop/The_Jitu_Training/talky/frontend/src/app/messagespage/messagespage.component.html"],"sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ChartService } from '../chart.service';\nimport { ChangeDetectorRef } from '@angular/core';\n\ninterface User {\n  id: number;\n  name: string;\n  phone: string;\n  image: string;\n  rooms: string[];\n}\n\n\n\n@Component({\n  selector: 'app-messagespage',\n  templateUrl: './messagespage.component.html',\n  styleUrls: ['./messagespage.component.scss']\n})\n\n\n\nexport class MessagespageComponent {\n  showSpinners: boolean = true;\n  \n  // @ViewChild('popup', {static: false}) popup: any;\n\n  public roomId: any\n  public messageText!: any;\n  public messageArray: { user: any, message: string }[] = [];\n  private storageArray:any[] = [];\n\n  public showScreen = false;\n  public phone!: string;\n  public currentUser!:User | undefined;\n  public selectedUser!:any;\n\n  public rooms = [\"room1\"]\n\n  public userList = [\n    {\n      id: 1,\n      name: 'The Swag Coder',\n      phone: '9876598765',\n      image: 'assets/user/user-1.png',\n      rooms: this.rooms\n    },\n    {\n      id: 2,\n      name: 'Wade Warren',\n      phone: '9876543210',\n      image: 'assets/user/user-2.png',\n      rooms: this.rooms\n    },\n    {\n      id: 3,\n      name: 'Albert Flores',\n      phone: '9988776655',\n      image: 'assets/user/user-3.png',\n      rooms: this.rooms\n    },\n    {\n      id: 4,\n      name: 'Dianne Russell',\n      phone: '9876556789',\n      image: 'assets/user/user-4.png',\n      rooms: this.rooms\n    }\n  ];\n\n  constructor(\n \n    private chatService: ChartService,\n    private cdr: ChangeDetectorRef  \n  ) {\n  }\n\n\n  ngOnInit() {\n    // Set a timeout to hide the spinners after 5 seconds\n    setTimeout(() => {\n      this.showSpinners = false;\n    }, 3000);\n\n    \n    this.chatService.getMessage()\n      .subscribe((data: { user: any, room: string, message: string }) => {\n        this.messageArray.push(data);\n       \n        console.log('Message received:', data);\n\n          setTimeout(() => {\n            this.storageArray = this.chatService.getStorage();\n            const storeIndex = this.storageArray\n              .findIndex((storage:any) => storage.roomId === this.roomId);\n            this.messageArray = this.storageArray[storeIndex].chats;\n          }, 500);\n        \n      });\n\n  }\n\n\n\n  selectUserHandler(phone: string): void {\n    this.selectedUser = this.userList.find(user => user.phone === phone);\n    if(this.currentUser){\n      this.roomId = this.selectedUser.roomId[this.currentUser.id];\n\n    }\n    this.messageArray = [];\n\n    this.storageArray = this.chatService.getStorage();\n    const storeIndex = this.storageArray\n      .findIndex((storage) => storage.roomId === this.roomId);\n\n    if (storeIndex > -1) {\n      this.messageArray = this.storageArray[storeIndex].chats;\n    }\n   \n  }\n\n\n\n  sendMessage(): void {\n\n    this.chatService.sendMessage({\n      user: \"Robinson\",\n      room: \"this.roomId\",\n      message: this.messageText\n    })\n  \n\n\n    this.storageArray = this.chatService.getStorage();\n    const storeIndex = this.storageArray\n      .findIndex((storage) => storage.roomId === this.roomId);\n\n      console.log(storeIndex);\n      \n    if (storeIndex > -1) {\n      \n        this.storageArray[storeIndex].chats.push({\n          user: this.currentUser?.name,\n          message: this.messageText\n        });\n     \n \n    } else {\n \n      const updateStorage = {\n        roomId: this.roomId,\n        chats: [{\n          user: this.currentUser?.name,\n          message: this.messageText\n        }]\n      };\n\n  \n\n      this.storageArray.push(updateStorage);\n      \n    \n    }\n\n    this.chatService.setStorage(this.storageArray);\n    this.messageText = '';\n    this.cdr.detectChanges();\n  }\n\n  \n}\n","<div *ngIf=\"showSpinners\">\n    <div class=\"container d-flex justify-content-center\">\n   <div class=\"spinner-grow text-muted\"></div>\n   <div class=\"spinner-grow text-primary\"></div>\n   <div class=\"spinner-grow text-success\"></div>\n   <div class=\"spinner-grow text-info\"></div>\n   <div class=\"spinner-grow text-warning\"></div>\n   <div class=\"spinner-grow text-danger\"></div>\n   <div class=\"spinner-grow text-secondary\"></div>\n   <div class=\"spinner-grow text-dark\"></div>\n   <div class=\"spinner-grow text-light\"></div>\n   </div>\n </div>\n\n <div *ngIf=\"!showSpinners\" class=\"p-4\">\n<!-- <app-navbar></app-navbar> -->\n<div class=\"container-fluid\">\n   <div class=\"row\">\n\n <!-- <div class=\"container d-flex justify-content-center\"> -->\n <app-sidebar  class=\"col-2 d-md-block bg-light sidebar\"></app-sidebar>\n\n   <main class=\"col-10\">\n    \n\n        <div class=\"row\">\n            <div class=\"col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\n\n                <div class=\"list-group\">\n                    <div  *ngFor=\"let user of userList\" class=\"list-group-item\"  (click)=\"selectUserHandler(user.phone)\">\n                      <div class=\"d-flex flex-row align-items-center\">\n                        <div class=\"rounded-circle overflow-hidden d-flex justify-content-center align-items-center border border-danger post-profile-photo mr-3\">\n                          <img src=\"assets/images/profiles/profile-1.jpg\" alt=\"...\" style=\"transform: scale(1.5); width: 100%; position: absolute; left: 0;\">\n                        </div>\n                        <span class=\"font-weight-bold px-2\">{{user.name}}</span>\n                        <span class=\"text-muted\"> &middot; </span>\n                        <span class=\"text-muted\">3 days</span>\n                      </div>\n                    </div>\n\n                   \n              \n            </div>\n            </div>\n\n            <div class=\"col-xl-9 col-lg-9 col-md-9 col-sm-9 col-9\">\n                <div class=\"card\">\n                    <div class=\"card-header\">Chat</div>\n                    <div class=\"card-body height3\">\n                      <div class=\"chat-container\">\n                        <ng-container *ngIf=\"selectedUser\">\n                          <div class=\"chat-header\">\n                \n                            <img [src]=\"selectedUser?.image\"\n                                 [alt]=\"selectedUser?.name\"\n                                 class=\"avatar\"\n                            />\n                            <p class=\"username\">{{selectedUser?.name}}</p>\n                \n                          </div>\n                \n                          <div class=\"chat-body\">\n                            <div *ngFor=\"let item of messageArray\"\n                                 \n                            >\n                              <p class=\"message-container\">{{item?.message}}</p>\n                            </div>\n                          </div>\n                \n                          <div class=\"chat-footer\">\n                \n                            <div class=\"row\">\n                              <div class=\"col-md-10\">\n                                <div class=\"form-group mb-0\">\n                                  <input type=\"text\"\n                                         placeholder=\"Type a message\"\n                                         class=\"form-control\"\n                                         [(ngModel)]=\"messageText\"\n                                         (keyup)=\"$event.keyCode === 13 && sendMessage()\"\n                                  />\n                                </div>\n                              </div>\n                \n                              <div class=\"col-md-2 text-center align-self-center\">\n                                <button class=\"btn btn-primary btn-sm px-3\"\n                                        (click)=\"sendMessage()\">Send\n                                </button>\n                              </div>\n                            </div>\n                \n                          </div>\n                        </ng-container>\n                      </div>\n                \n                   \n\n\n                        <!-- <ul class=\"chat-list\">\n                            <li class=\"in\">\n                                <div class=\"chat-img\">\n                                    <img alt=\"Avtar\" src=\"https://bootdey.com/img/Content/avatar/avatar1.png\">\n                                </div>\n                                <div class=\"chat-body\">\n                                    <div class=\"chat-message\">\n                                        <h5>Jimmy Willams</h5>\n                                        <p>Raw denim heard of them tofu master cleanse</p>\n                                    </div>\n                                </div>\n                            </li>\n                            <li class=\"out\">\n                                <div class=\"chat-img\">\n                                    <img alt=\"Avtar\" src=\"https://bootdey.com/img/Content/avatar/avatar6.png\">\n                                </div>\n                                <div class=\"chat-body\">\n                                    <div class=\"chat-message\">\n                                        <h5>Serena</h5>\n                                        <p>Next level veard</p>\n                                    </div>\n                                </div>\n                            </li>\n                            <li class=\"in\">\n                                <div class=\"chat-img\">\n                                    <img alt=\"Avtar\" src=\"https://bootdey.com/img/Content/avatar/avatar1.png\">\n                                </div>\n                                <div class=\"chat-body\">\n                                    <div class=\"chat-message\">\n                                        <h5 class=\"name\">Jimmy Willams</h5>\n                                        <p>Will stumptown scenes coffee viral.</p>\n                                    </div>\n                                </div>\n                            </li>\n                            <li class=\"out\">\n                                <div class=\"chat-img\">\n                                    <img alt=\"Avtar\" src=\"https://bootdey.com/img/Content/avatar/avatar6.png\">\n                                </div>\n                                <div class=\"chat-body\">\n                                    <div class=\"chat-message\">\n                                        <h5>Serena</h5>\n                                        <p>Tofu master best deal</p>\n                                    </div>\n                                </div>\n                            </li>\n                        </ul>\n                        <input type=\"text\"\n                        placeholder=\"Type a message\"\n                        class=\"form-control\"\n                        [(ngModel)]=\"messageText\"\n                        (keyup)=\"$event.keyCode === 13 && sendMessage()\"\n                 /> -->\n                    </div>\n                </div>\n            </div>\n           \n        </div>\n \n   \n   </main>\n </div>\n</div>\n</div>"],"mappings":";;;;;;;ICAAA,EAAA,CAAAC,cAAA,UAA0B;IAEvBD,EAAA,CAAAE,SAAA,aAA2C;IAS3CF,EAAA,CAAAG,YAAA,EAAM;;;;;;IAkBWH,EAAA,CAAAC,cAAA,cAAqG;IAAxCD,EAAA,CAAAI,UAAA,mBAAAC,gEAAA;MAAA,MAAAC,WAAA,GAAAN,EAAA,CAAAO,aAAA,CAAAC,GAAA;MAAA,MAAAC,OAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAA,OAASZ,EAAA,CAAAa,WAAA,CAAAF,MAAA,CAAAG,iBAAA,CAAAL,OAAA,CAAAM,KAAA,CAA6B;IAAA,EAAC;IAClGf,EAAA,CAAAC,cAAA,cAAgD;IAE5CD,EAAA,CAAAE,SAAA,cAAmI;IACrIF,EAAA,CAAAG,YAAA,EAAM;IACNH,EAAA,CAAAC,cAAA,eAAoC;IAAAD,EAAA,CAAAgB,MAAA,GAAa;IAAAhB,EAAA,CAAAG,YAAA,EAAO;IACxDH,EAAA,CAAAC,cAAA,eAAyB;IAACD,EAAA,CAAAgB,MAAA,eAAS;IAAAhB,EAAA,CAAAG,YAAA,EAAO;IAC1CH,EAAA,CAAAC,cAAA,eAAyB;IAAAD,EAAA,CAAAgB,MAAA,aAAM;IAAAhB,EAAA,CAAAG,YAAA,EAAO;;;;IAFFH,EAAA,CAAAiB,SAAA,GAAa;IAAbjB,EAAA,CAAAkB,iBAAA,CAAAT,OAAA,CAAAU,IAAA,CAAa;;;;;IA4B7CnB,EAAA,CAAAC,cAAA,UAEC;IAC8BD,EAAA,CAAAgB,MAAA,GAAiB;IAAAhB,EAAA,CAAAG,YAAA,EAAI;;;;IAArBH,EAAA,CAAAiB,SAAA,GAAiB;IAAjBjB,EAAA,CAAAkB,iBAAA,CAAAE,OAAA,kBAAAA,OAAA,CAAAC,OAAA,CAAiB;;;;;;IAfpDrB,EAAA,CAAAsB,uBAAA,GAAmC;IACjCtB,EAAA,CAAAC,cAAA,cAAyB;IAEvBD,EAAA,CAAAE,SAAA,cAGE;IACFF,EAAA,CAAAC,cAAA,YAAoB;IAAAD,EAAA,CAAAgB,MAAA,GAAsB;IAAAhB,EAAA,CAAAG,YAAA,EAAI;IAIhDH,EAAA,CAAAC,cAAA,cAAuB;IACrBD,EAAA,CAAAuB,UAAA,IAAAC,0DAAA,kBAIM;IACRxB,EAAA,CAAAG,YAAA,EAAM;IAENH,EAAA,CAAAC,cAAA,cAAyB;IAQVD,EAAA,CAAAI,UAAA,2BAAAqB,qFAAAC,MAAA;MAAA1B,EAAA,CAAAO,aAAA,CAAAoB,IAAA;MAAA,MAAAC,MAAA,GAAA5B,EAAA,CAAAY,aAAA;MAAA,OAAAZ,EAAA,CAAAa,WAAA,CAAAe,MAAA,CAAAC,WAAA,GAAAH,MAAA;IAAA,EAAyB,mBAAAI,6EAAAJ,MAAA;MAAA1B,EAAA,CAAAO,aAAA,CAAAoB,IAAA;MAAA,MAAAI,OAAA,GAAA/B,EAAA,CAAAY,aAAA;MAAA,OAChBZ,EAAA,CAAAa,WAAA,CAAAa,MAAA,CAAAM,OAAA,KAAmB,EAAE,IAAID,OAAA,CAAAE,WAAA,EAAa;IAAA,EADtB;IAHhCjC,EAAA,CAAAG,YAAA,EAKE;IAINH,EAAA,CAAAC,cAAA,eAAoD;IAE1CD,EAAA,CAAAI,UAAA,mBAAA8B,8EAAA;MAAAlC,EAAA,CAAAO,aAAA,CAAAoB,IAAA;MAAA,MAAAQ,OAAA,GAAAnC,EAAA,CAAAY,aAAA;MAAA,OAASZ,EAAA,CAAAa,WAAA,CAAAsB,OAAA,CAAAF,WAAA,EAAa;IAAA,EAAC;IAACjC,EAAA,CAAAgB,MAAA,aAChC;IAAAhB,EAAA,CAAAG,YAAA,EAAS;IAKjBH,EAAA,CAAAoC,qBAAA,EAAe;;;;IAtCNpC,EAAA,CAAAiB,SAAA,GAA2B;IAA3BjB,EAAA,CAAAqC,UAAA,QAAAC,MAAA,CAAAC,YAAA,kBAAAD,MAAA,CAAAC,YAAA,CAAAC,KAAA,EAAAxC,EAAA,CAAAyC,aAAA,CAA2B,QAAAH,MAAA,CAAAC,YAAA,kBAAAD,MAAA,CAAAC,YAAA,CAAApB,IAAA;IAIZnB,EAAA,CAAAiB,SAAA,GAAsB;IAAtBjB,EAAA,CAAAkB,iBAAA,CAAAoB,MAAA,CAAAC,YAAA,kBAAAD,MAAA,CAAAC,YAAA,CAAApB,IAAA,CAAsB;IAKpBnB,EAAA,CAAAiB,SAAA,GAAe;IAAfjB,EAAA,CAAAqC,UAAA,YAAAC,MAAA,CAAAI,YAAA,CAAe;IAexB1C,EAAA,CAAAiB,SAAA,GAAyB;IAAzBjB,EAAA,CAAAqC,UAAA,YAAAC,MAAA,CAAAT,WAAA,CAAyB;;;;;IA/DjE7B,EAAA,CAAAC,cAAA,cAAuC;IAMvCD,EAAA,CAAAE,SAAA,sBAAsE;IAEpEF,EAAA,CAAAC,cAAA,eAAqB;IAOJD,EAAA,CAAAuB,UAAA,IAAAoB,0CAAA,mBASM;IAId3C,EAAA,CAAAG,YAAA,EAAM;IAGNH,EAAA,CAAAC,cAAA,cAAuD;IAEtBD,EAAA,CAAAgB,MAAA,YAAI;IAAAhB,EAAA,CAAAG,YAAA,EAAM;IACnCH,EAAA,CAAAC,cAAA,eAA+B;IAE3BD,EAAA,CAAAuB,UAAA,KAAAqB,oDAAA,2BAyCe;IACjB5C,EAAA,CAAAG,YAAA,EAAM;;;;IA/DeH,EAAA,CAAAiB,SAAA,GAAW;IAAXjB,EAAA,CAAAqC,UAAA,YAAAQ,MAAA,CAAAC,QAAA,CAAW;IAqBf9C,EAAA,CAAAiB,SAAA,GAAkB;IAAlBjB,EAAA,CAAAqC,UAAA,SAAAQ,MAAA,CAAAN,YAAA,CAAkB;;;AD3BzD,OAAM,MAAOQ,qBAAqB;EAgDhCC,YAEUC,WAAyB,EACzBC,GAAsB;IADtB,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,GAAG,GAAHA,GAAG;IAlDb,KAAAC,YAAY,GAAY,IAAI;IAMrB,KAAAT,YAAY,GAAqC,EAAE;IAClD,KAAAU,YAAY,GAAS,EAAE;IAExB,KAAAC,UAAU,GAAG,KAAK;IAKlB,KAAAC,KAAK,GAAG,CAAC,OAAO,CAAC;IAEjB,KAAAR,QAAQ,GAAG,CAChB;MACES,EAAE,EAAE,CAAC;MACLpC,IAAI,EAAE,gBAAgB;MACtBJ,KAAK,EAAE,YAAY;MACnByB,KAAK,EAAE,wBAAwB;MAC/Bc,KAAK,EAAE,IAAI,CAACA;KACb,EACD;MACEC,EAAE,EAAE,CAAC;MACLpC,IAAI,EAAE,aAAa;MACnBJ,KAAK,EAAE,YAAY;MACnByB,KAAK,EAAE,wBAAwB;MAC/Bc,KAAK,EAAE,IAAI,CAACA;KACb,EACD;MACEC,EAAE,EAAE,CAAC;MACLpC,IAAI,EAAE,eAAe;MACrBJ,KAAK,EAAE,YAAY;MACnByB,KAAK,EAAE,wBAAwB;MAC/Bc,KAAK,EAAE,IAAI,CAACA;KACb,EACD;MACEC,EAAE,EAAE,CAAC;MACLpC,IAAI,EAAE,gBAAgB;MACtBJ,KAAK,EAAE,YAAY;MACnByB,KAAK,EAAE,wBAAwB;MAC/Bc,KAAK,EAAE,IAAI,CAACA;KACb,CACF;EAOD;EAGAE,QAAQA,CAAA;IACN;IACAC,UAAU,CAAC,MAAK;MACd,IAAI,CAACN,YAAY,GAAG,KAAK;IAC3B,CAAC,EAAE,IAAI,CAAC;IAGR,IAAI,CAACF,WAAW,CAACS,UAAU,EAAE,CAC1BC,SAAS,CAAEC,IAAkD,IAAI;MAChE,IAAI,CAAClB,YAAY,CAACmB,IAAI,CAACD,IAAI,CAAC;MAE5BE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,IAAI,CAAC;MAEpCH,UAAU,CAAC,MAAK;QACd,IAAI,CAACL,YAAY,GAAG,IAAI,CAACH,WAAW,CAACe,UAAU,EAAE;QACjD,MAAMC,UAAU,GAAG,IAAI,CAACb,YAAY,CACjCc,SAAS,CAAEC,OAAW,IAAKA,OAAO,CAACC,MAAM,KAAK,IAAI,CAACA,MAAM,CAAC;QAC7D,IAAI,CAAC1B,YAAY,GAAG,IAAI,CAACU,YAAY,CAACa,UAAU,CAAC,CAACI,KAAK;MACzD,CAAC,EAAE,GAAG,CAAC;IAEX,CAAC,CAAC;EAEN;EAIAvD,iBAAiBA,CAACC,KAAa;IAC7B,IAAI,CAACwB,YAAY,GAAG,IAAI,CAACO,QAAQ,CAACwB,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACxD,KAAK,KAAKA,KAAK,CAAC;IACpE,IAAG,IAAI,CAACyD,WAAW,EAAC;MAClB,IAAI,CAACJ,MAAM,GAAG,IAAI,CAAC7B,YAAY,CAAC6B,MAAM,CAAC,IAAI,CAACI,WAAW,CAACjB,EAAE,CAAC;;IAG7D,IAAI,CAACb,YAAY,GAAG,EAAE;IAEtB,IAAI,CAACU,YAAY,GAAG,IAAI,CAACH,WAAW,CAACe,UAAU,EAAE;IACjD,MAAMC,UAAU,GAAG,IAAI,CAACb,YAAY,CACjCc,SAAS,CAAEC,OAAO,IAAKA,OAAO,CAACC,MAAM,KAAK,IAAI,CAACA,MAAM,CAAC;IAEzD,IAAIH,UAAU,GAAG,CAAC,CAAC,EAAE;MACnB,IAAI,CAACvB,YAAY,GAAG,IAAI,CAACU,YAAY,CAACa,UAAU,CAAC,CAACI,KAAK;;EAG3D;EAIApC,WAAWA,CAAA;IAET,IAAI,CAACgB,WAAW,CAAChB,WAAW,CAAC;MAC3BsC,IAAI,EAAE,UAAU;MAChBE,IAAI,EAAE,aAAa;MACnBpD,OAAO,EAAE,IAAI,CAACQ;KACf,CAAC;IAIF,IAAI,CAACuB,YAAY,GAAG,IAAI,CAACH,WAAW,CAACe,UAAU,EAAE;IACjD,MAAMC,UAAU,GAAG,IAAI,CAACb,YAAY,CACjCc,SAAS,CAAEC,OAAO,IAAKA,OAAO,CAACC,MAAM,KAAK,IAAI,CAACA,MAAM,CAAC;IAEvDN,OAAO,CAACC,GAAG,CAACE,UAAU,CAAC;IAEzB,IAAIA,UAAU,GAAG,CAAC,CAAC,EAAE;MAEjB,IAAI,CAACb,YAAY,CAACa,UAAU,CAAC,CAACI,KAAK,CAACR,IAAI,CAAC;QACvCU,IAAI,EAAE,IAAI,CAACC,WAAW,EAAErD,IAAI;QAC5BE,OAAO,EAAE,IAAI,CAACQ;OACf,CAAC;KAGL,MAAM;MAEL,MAAM6C,aAAa,GAAG;QACpBN,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBC,KAAK,EAAE,CAAC;UACNE,IAAI,EAAE,IAAI,CAACC,WAAW,EAAErD,IAAI;UAC5BE,OAAO,EAAE,IAAI,CAACQ;SACf;OACF;MAID,IAAI,CAACuB,YAAY,CAACS,IAAI,CAACa,aAAa,CAAC;;IAKvC,IAAI,CAACzB,WAAW,CAAC0B,UAAU,CAAC,IAAI,CAACvB,YAAY,CAAC;IAC9C,IAAI,CAACvB,WAAW,GAAG,EAAE;IACrB,IAAI,CAACqB,GAAG,CAAC0B,aAAa,EAAE;EAC1B;EAAC,QAAAC,CAAA,G;qBAlJU9B,qBAAqB,EAAA/C,EAAA,CAAA8E,iBAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAhF,EAAA,CAAA8E,iBAAA,CAAA9E,EAAA,CAAAiF,iBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAArBnC,qBAAqB;IAAAoC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCvBlCzF,EAAA,CAAAuB,UAAA,IAAAoE,oCAAA,kBAYO;QAEN3F,EAAA,CAAAuB,UAAA,IAAAqE,oCAAA,kBAiJK;;;QA/JA5F,EAAA,CAAAqC,UAAA,SAAAqD,GAAA,CAAAvC,YAAA,CAAkB;QAcjBnD,EAAA,CAAAiB,SAAA,GAAmB;QAAnBjB,EAAA,CAAAqC,UAAA,UAAAqD,GAAA,CAAAvC,YAAA,CAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}